trigger:
  batch: true
  branches:
    include:
      - "*"
  paths:
    include:
      - "Kubernetes/Continuous Integration/*"
    exclude:
      - "*"

pr: none

pool:
  vmImage: "Ubuntu-16.04"

variables:
  IMAGE_NAME: "apprenticeshipsdevops/azure-pipelines-build-agent"

steps:
  - script: echo "##vso[task.setvariable variable=IMAGE_NAME_WITH_TAG;]$IMAGE_NAME:$(Build.BuildNumber)"
    displayName: "Set image name with tag"

  - script: docker pull $(IMAGE_NAME):latest || true
    displayName: "Pull latest docker image to cache"

  - task: Docker@1
    displayName: Build image
    inputs:
      command: Build an image
      imageName: $(IMAGE_NAME)
      dockerFile: Kubernetes/Continuous Integration/Dockerfile
      addDefaultLabels: false
      arguments: "--cache-from $(IMAGE_NAME):latest -t $(IMAGE_NAME_WITH_TAG) -t $(IMAGE_NAME):latest"

  - task: Docker@1
    displayName: Docker Hub login
    inputs:
      command: "login"
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: Apprenticeships DevOps Docker Hub

  - task: Docker@1
    displayName: Push tagged image if master
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      command: Push an image
      imageName: $(IMAGE_NAME_WITH_TAG)

  - task: Docker@1
    displayName: Push tagged image (latest) if master
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      command: Push an image
      imageName: $(IMAGE_NAME):latest

  - task: CopyFiles@2
    displayName: "Copy Files to: $(build.artifactstagingdirectory)"
    inputs:
      Contents: |
        Kubernetes/Continuous Integration/manifest.yaml
        Kubernetes/Continuous Integration/template.json
      TargetFolder: "$(build.artifactstagingdirectory)/publish"
      OverWrite: true

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)/publish"

